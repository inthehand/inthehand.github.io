<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>IrDAClient Class</title><meta name="Title" content="IrDAClient" /><meta name="Help.Id" content="T:InTheHand.Net.Sockets.IrDAClient" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="InTheHand.Net.Sockets" /><meta name="guid" content="T_InTheHand_Net_Sockets_IrDAClient" /><meta name="Description" content="Makes connections to services on peer IrDA devices." /><meta name="tocFile" content="../toc/IDJA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">32feet.NET - Personal Area Networking for .NET</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Ir<wbr />DAClient Class</h1><div class="summary">
            Makes connections to services on peer IrDA devices.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_InTheHand_Net_Sockets.htm">InTheHand.Net.Sockets</a><br /><strong>Assembly:</strong> InTheHand.Net.IrDA (in InTheHand.Net.IrDA.dll) Version: 4.0.2+7156b6d5e96fc1f09828f6fa454a3f57433aa896<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">IrDAClient</span> : <span class="identifier">IDisposable</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">IrDAClient</span>
	<span class="keyword">Implements</span> <span class="identifier">IDisposable</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">IrDAClient</span> : <span class="identifier">IDisposable</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">type</span> <span class="identifier">IrDAClient</span> = 
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <span class="identifier">IDisposable</span>
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">IrDAClient</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="https://docs.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noopener noreferrer">IDisposable</a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p>Makes connections to services on peer IrDA devices.  It allows 
            discovery of all devices in range, then a connection can be made to 
            the required service on the chosen peer.  Or, given just the 
            service name a connection will be made to an arbitrary peer.  This is 
            most useful when it is expected that there will be only one device in 
            range—as is often the case.</p><p>It can be used with both the full and Compact frameworks, and can 
            be used as a replacement for the latter's built-in version simply by 
            changing the referenced namespace and assembly.
            It also has features extra 
            to those in the CF's version.  For instance, following the 
            pattern of <a href="https://docs.microsoft.com/dotnet/api/system.net.sockets.tcpclient" target="_blank" rel="noopener noreferrer">TcpClient</a> in framework 
            version 2, it provides access to the underlying 
            <a href="https://docs.microsoft.com/dotnet/api/system.net.sockets.socket" target="_blank" rel="noopener noreferrer">Socket</a> via a <span class="code">Client</span> 
            property.  This is particularly useful as it allows setting socket 
            options, for instance IrCOMM Cooked mode with option <a href="F_InTheHand_Net_Sockets_IrDASocketOptionName_NineWireMode.htm">NineWireMode</a>.
            </p><p>There a number of well-known services, a few are listed here.
            <ul><li><strong>OBEX file transfer</strong> – OBEX:IrXfer, (TinyTP)</li><li><strong>OBEX general</strong> – OBEX, (TinyTP)</li><li><strong>Printing</strong> – IrLPT, IrLMP mode</li><li><strong>IrCOMM e.g. to modems</strong> – IrDA:IrCOMM, IrCOMM 9-Wire/Cooked mode</li></ul>
            The modes required by the last two are set by socket option, as noted 
            for IrCOMM above.
            </p><p>
            Of course the library also includes specific OBEX protocol support, both 
            client and server, see <a href="T_InTheHand_Net_ObexWebRequest.htm">ObexWebRequest</a> etc.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection">Example code to connect to a IrCOMM service would be as 
            follows.
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-VB.NET">Public Shared Sub Main()
  Dim cli As New IrDAClient
  ' Set IrCOMM Cooked/9-wire mode.
  cli.Client.SetSocketOption(IrDASocketOptionLevel.IrLmp, _
    IrDASocketOptionName.NineWireMode, _
    1)  ' equivalent to 'True'
  ' Connect
  cli.Connect("IrDA:IrCOMM")
  ' Connected, now send and receive e.g. by using the 
  ' NetworkStream returned by cli.GetStream
  ...
End Sub</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDAAFASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient__ctor.htm">IrDAClient<span id="LSTE9D1B79D_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Initializes a new instance of the <span class="selflink">IrDAClient</span> class.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient__ctor_1.htm">IrDAClient(IrDAEndPoint)</a></td><td>
            Initializes a new instance of the <span class="selflink">IrDAClient</span> 
            class and connects to the specified endpoint.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient__ctor_2.htm">IrDAClient(String)</a></td><td>
            Initializes a new instance of the <span class="selflink">IrDAClient</span> 
            class and connects to the specified service name.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDQFASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_InTheHand_Net_Sockets_IrDAClient_Active.htm">Active</a></td><td>
            Gets or set a value that indicates whether a connection has been made. 
            </td></tr><tr><td><a href="P_InTheHand_Net_Sockets_IrDAClient_Available.htm">Available</a></td><td>
            The number of bytes of data received from the network and available to be read.
            </td></tr><tr><td><a href="P_InTheHand_Net_Sockets_IrDAClient_Client.htm">Client</a></td><td>
            Gets or sets the underlying <a href="https://docs.microsoft.com/dotnet/api/system.net.sockets.socket" target="_blank" rel="noopener noreferrer">Socket</a>.
            </td></tr><tr><td><a href="P_InTheHand_Net_Sockets_IrDAClient_Connected.htm">Connected</a></td><td>
            Gets a value indicating whether the underlying <a href="https://docs.microsoft.com/dotnet/api/system.net.sockets.socket" target="_blank" rel="noopener noreferrer">Socket</a> for an <span class="selflink">IrDAClient</span> is connected to a remote host.
            </td></tr><tr><td><a href="P_InTheHand_Net_Sockets_IrDAClient_RemoteMachineName.htm">RemoteMachineName</a></td><td>
            Gets the name of the peer device participating in the communication.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDCFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_BeginConnect.htm">BeginConnect(IrDAEndPoint, AsyncCallback, Object)</a></td><td>
            Begins an asynchronous request for a remote host connection.
            The remote host is specified by an endpoint. 
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_BeginConnect_1.htm">BeginConnect(String, AsyncCallback, Object)</a></td><td>
            Begins an asynchronous request for a remote host connection.
            The remote host is specified by a service name (string). 
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_Close.htm">Close</a></td><td>
            Closes the <span class="selflink">IrDAClient</span> and the underlying connection.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_Connect.htm">Connect(IrDAEndPoint)</a></td><td>
            Forms a connection to the specified endpoint.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_Connect_1.htm">Connect(String)</a></td><td>
            Forms a connection to the specified service on an arbitrary peer.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_ConnectAsync.htm">ConnectAsync</a></td><td>
            Connects the client to the specified service on an arbitrary peer as an asynchronous operation.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_DiscoverDevices.htm">DiscoverDevices<span id="LSTE9D1B79D_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Obtains information about available devices.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_DiscoverDevices_1.htm">DiscoverDevices(Int32)</a></td><td>
            Obtains information about a specified number of devices.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_DiscoverDevices_2.htm">DiscoverDevices(Int32, Socket)</a></td><td>
            Obtains information about available devices using a socket.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_Dispose.htm">Dispose<span id="LSTE9D1B79D_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Closes the <span class="selflink">IrDAClient</span> and the underlying connection.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_Dispose_1.htm">Dispose(Boolean)</a></td><td>
            Releases the unmanaged resources used by the <span class="selflink">IrDAClient</span> and optionally releases the managed resources.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_EndConnect.htm">EndConnect</a></td><td>
            Asynchronously accepts an incoming connection attempt.
            </td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_Finalize.htm">Finalize</a></td><td><br />(Overrides <a href="https://docs.microsoft.com/dotnet/api/system.object.finalize#System_Object_Finalize" target="_blank" rel="noopener noreferrer">Object<span id="LSTE9D1B79D_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Finalize<span id="LSTE9D1B79D_4" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_GetRemoteMachineName.htm">GetRemoteMachineName</a></td><td>
            Gets the name of the peer device using the specified socket.
            </td></tr><tr><td><a href="M_InTheHand_Net_Sockets_IrDAClient_GetStream.htm">GetStream</a></td><td>
            Returns the <a href="https://docs.microsoft.com/dotnet/api/system.net.sockets.networkstream" target="_blank" rel="noopener noreferrer">NetworkStream</a> used to send and receive data.
            </td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_InTheHand_Net_Sockets.htm">InTheHand.Net.Sockets Namespace</a></div><div><a href="N_InTheHand_Net_Sockets.htm">InTheHand.Net.Sockets</a></div><div><span class="noLink">IrDAClient</span></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="https://inthehand.com" target="_blank" rel="noopener noreferrer">Copyright © 2003-2022 In The Hand Ltd. All Rights Reserved.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40inthehand.com?Subject=32feet.NET%20-%20Personal%20Area%20Networking%20for%20.NET">feedback@inthehand.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>